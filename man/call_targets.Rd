% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/debris_id.R
\name{call_targets}
\alias{call_targets}
\title{Call clean droplets after running EM using percent debris}
\usage{
call_targets(
  x,
  thresh_score = 0.5,
  clusters = NULL,
  min_genes = 200,
  droplets = NULL,
  verbose = TRUE
)
}
\arguments{
\item{x}{An SCE object.}

\item{thresh_score}{The maximum debris score a droplet must have 
to be classified as a cell/nucleus. This should be a value between 
0 and 1. Set to NULL to turn off filtering by threshold.}

\item{clusters}{Remove droplets assigned to these clusters.}

\item{min_genes}{The minimum number of genes a droplet must have 
to be classified as a cell/nucleus.}

\item{droplets}{A character vector that specifies target droplets 
manually. Only droplets that intersect with test set will be 
used. If given, ignores the other parameteres. Default is NULL.}

\item{verbose}{verbosity}
}
\value{
An SCE object.
}
\description{
Call cells or nuclei from an SCE object. Adds meta data to 
the test data slot, which can be retreived
using the function \code{\link{droplet_data}}. This adds 
column "Call" which takes either "Debris" or "Clean". Droplets
with a debris scores less than \code{thresh_score} and at least 
\code{min_genes} genes detected pass filtering.
}
\examples{
\donttest{

# Default filtering
sce <- call_targets(sce)
drop_data <- droplet_data(sce)
table(drop_data[,"Call"])

# More stringent filtering
sce <- call_targets(sce, thresh = 0.3)
drop_data <- droplet_data(sce)
table(drop_data[,"Call"])

# Less stringent filtering
sce <- call_targets(sce, thresh = 0.7)
drop_data <- droplet_data(sce)
table(drop_data[,"Call"])

}
}
