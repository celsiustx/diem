% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diem.R
\name{diem}
\alias{diem}
\title{Run DIEM pipeline}
\usage{
diem(sce, min_counts = 100, cpm_thresh = 0, n_var_genes = 2000,
  lss = 0.3, n_pcs = 30, k_init = 30, iter.max_init = 15,
  nstart_init = 30, min_size_init = 10, seedn = 1, eps = 1e-04,
  max_iter_dm = 200, min_genes = 0, top_n = NULL,
  debris_ids = NULL, threads = 1, verbose = TRUE)
}
\arguments{
\item{sce}{An SCE object.}

\item{min_counts}{A numeric value that specifies the minimum 
total read/UMI counts a test droplet can have.}

\item{cpm_thresh}{CPMs must be greater than this value. This is 0 by 
default to include all expressed genes.}

\item{n_var_genes}{Number of top variable genes to use for PCA.}

\item{lss}{The span parameter of the loess regression, the parameter 
for the function \code{\link[stats]{loess}}. The loess regression is
used to regress out the effect of mean expression on variance.}

\item{n_pcs}{Number of PCs to return.}

\item{k_init}{The number of clusters to initialize k-means. This can be 
1 or several values so that multiple values can be compared. This value 
will not include the debris cluster.}

\item{iter.max_init}{The maximum number of k-means interations 
for the initialization.}

\item{nstart_init}{The number of starts to use in k-means for 
for the initialization.}

\item{min_size_init}{The minimum number of droplets that must belong 
to an initialized cluster.}

\item{seedn}{The seed for random k-means initialization. 
It is set to 1 by default. If you desire truly random initializations
across runs, set to NULL or different values for each run.}

\item{eps}{The delta threshold for when to call convergence for 
the EM estimation of the Dirichlet-multinomial mixture model. The EM 
stops when delta falls below this value. We define delta as the 
average change in posterior probability. By default this is set to 
1e4, so that the EM converges when less than 1 in 10,000 labels 
change on average.}

\item{max_iter_dm}{Maximum number of iterations for the EM estimation 
of the Dirichlet-multinomial mixture model.}

\item{min_genes}{A numeric value that specifies the minimum 
total genes detected a test droplet can have.}

\item{top_n}{A numeric value giving the maximum number of test droplets. 
This is turned off by default.}

\item{debris_ids}{A character vector of droplet IDs that will be assigned 
to the debris set, regardless of its total counts or genes detected.}

\item{threads}{Number of threads for parallel execution. Default is 1.}

\item{verbose}{Logical indicating verbosity.}
}
\value{
SCE object.
}
\description{
Run DIEM pipeline on an SCE object. This function takes as input raw data 
from a single-nucleus or single-cell experiment, estimates the 
parameters of the Dirichlet-multinomial mixture model, and calculates 
posterior probabilities that each droplet belongs to a cluster.
The input is an SCE object, which can be created using the 
function \code{\link{create_SCE}}. This returns the SCE object with 
the estimated parameters. To classify the droplets, run 
\code{call_targets} on the returned SCE object.
}
\details{
This is a wrapper function that calls the following functions:
\enumerate{
 \item \code{\link{set_debris_test_set}}
 \item \code{\link{filter_genes}}
 \item \code{\link{get_pcs}}
 \item \code{\link{init}}
 \item \code{\link{run_em}}
}

The diem function takes the sce object \code{sce} and first 
partitions the droplets into the debris and sets. Then, 
expressed genes are only included in the analysis. PCA is run 
on the normalized counts data subset to the variable genes in 
order to reduce the dimensionality for k-means. Initialization 
is performed with k-means on the PCs. inally, EM is run 
to estimate the parameters of the mixture distribution.
}
\examples{
\donttest{
counts <- read_10x("mouse_nuclei_2k/raw_gene_bc_matrices/mm10/")
mb_sce <- create_SCE(x=counts, name="Mouse Brain")
mb_sce <- diem(mb_sce)
mb_sce <- call_targets(mb_sce, pp_thresh = 0.95, min_genes = 200)
mm_seur <- convert_to_seurat(x=mb_sce, min.features = 200, min.cells = 3, project=mb_sce@name)
}
}
