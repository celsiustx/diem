% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diem.R
\name{diem}
\alias{diem}
\title{Run DIEM pipeline}
\usage{
diem(sce, top_n = NULL, min_counts = 100, min_genes = 0,
  fix_debris = NULL, order_by = "gene", cpm_thresh = 0,
  n_var = 2000, lss = 0.3, n_pcs = 30, k_init = 30,
  iter.max = 15, nstart = 30, min_size = 10, fltr = 0.1,
  seedn = 1, psc = 1e-10, eps = 1e-04, max_iter = 100,
  pp_thresh = 0.95, gene_thresh = 200, verbose = TRUE)
}
\arguments{
\item{sce}{An SCE object.}

\item{top_n}{A numeric value giving the total number of test droplets 
and take the counts of the \code{top_n} ranked droplet. Set to \code{NULL} 
to disable and set all droplets above \code{min_counts} and 
\code{min_genes} to the test set.}

\item{min_counts}{A numeric value that specifies the minimum 
total read/UMI counts a test droplet can have.}

\item{min_genes}{A numeric value that specifies the minimum 
total genes detected a test droplet can have.}

\item{fix_debris}{A character vector of droplet IDs that will be assigned 
to the debris set, regardless of its total counts or genes detected.}

\item{order_by}{Whether to order the droplets by total number of total 
counts or total number of genes detected in calculating the 
cluster set.}

\item{cpm_thresh}{The minimum CPM threshold for removing genes.}

\item{lss}{Numeric value of the span parameter of the loess regression 
when identifying variable genes.}

\item{eps}{Numeric threshold. The EM algorithm converges when the 
percent change in log likihood is less than \code{eps}.}

\item{max_iter}{The maximum number of iterations allowed to run.}

\item{pp_thresh}{Numeric threshold, where clean droplets must have a 
posterior probability of at least \code{pp_thresh}.}

\item{gene_thresh}{Numeric threshold, where clean droplets must have at least 
\code{min_genes} genes detected.}

\item{verbose}{Logical indicating verbosity.}

\item{cluster_n}{Numeric value specifying the number of droplets to use 
in the test set.}
}
\value{
SCE object.
}
\description{
Run DIEM pipeline on an SCE object. This function takes as input raw data 
from a single-nucleus or single-cell experiment and filters out droplets 
that show evidence of contamination from debris/ambient RNA. The input 
data is an sce object, returned by the function \code{\link{create_SCE}}. 
The function outputs the SCE object with meta data specifying the 
filtered and clean droplets.
}
\examples{
\donttest{
counts <- read_10x("mouse_nuclei_2k/raw_gene_bc_matrices/mm10/")
mb_sce <- create_SCE(x=counts, name="Mouse Brain")
mb_sce <- diem(mb_sce)
mm_seur <- convert_to_seurat(x=mb_sce, min.features = 200, min.cells = 3, project=mb_sce@name)
}
}
